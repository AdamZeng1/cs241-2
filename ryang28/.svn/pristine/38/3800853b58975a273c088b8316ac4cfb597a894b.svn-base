[
  {
    "timestamp": "2016-09-03 12:00:00.782086", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\ncc_impl_main.c: In function \u2018test_correct_number_sentences\u2019:\ncc_impl_main.c:35:20: warning: implicit declaration of function \u2018strlen\u2019 [-Wimplicit-function-declaration]\n         success &= strlen(output[i]) == 10;\n                    ^\ncc_impl_main.c:35:20: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\ncc_impl_main.c:35:20: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncc_impl_main.c: In function \u2018test_correct_number_words\u2019:\ncc_impl_main.c:49:16: warning: implicit declaration of function \u2018strcmp\u2019 [-Wimplicit-function-declaration]\n     success &= strcmp(output[0], correct_output[0]);\n                ^\ncc_impl_main.c: In function \u2018test_multiple_punc_edge_case\u2019:\ncc_impl_main.c:78:16: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\n     success &= strlen(output[0]) == 10;\n                ^\ncc_impl_main.c:78:16: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncc_impl_main.c: In function \u2018test_incomplete_sentences\u2019:\ncc_impl_main.c:91:16: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\n     success &= strlen(output[0]) == 10;\n                ^\ncc_impl_main.c:91:16: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncamelCaser.c: In function \u2018camel_caser\u2019:\ncamelCaser.c:10:28: warning: implicit declaration of function \u2018strlen\u2019 [-Wimplicit-function-declaration]\n  char* input_copy = malloc(strlen(input_str));\n                            ^\ncamelCaser.c:10:28: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\ncamelCaser.c:10:28: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncamelCaser.c:11:12: error: \u2018source\u2019 undeclared (first use in this function)\n  char* i = source;\n            ^\ncamelCaser.c:11:12: note: each undeclared identifier is reported only once for each function it appears in\ncamelCaser.c:21:6: error: conflicting types for \u2018j\u2019\n  int j = 0;\n      ^\ncamelCaser.c:12:10: note: previous definition of \u2018j\u2019 was here\n    char* j = source;\n          ^\ncamelCaser.c:23:18: error: \u2018size\u2019 undeclared (first use in this function)\n  for(int i=0; i< size; i++){\n                  ^\nmake: *** [camelCaser.o] Error 1\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "implementationNullTerminated", 
        "description": "Test that camelCaser returns NULL when given NULL"
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\ncamelCaser.c: In function \u2018camel_caser\u2019:\ncamelCaser.c:10:28: warning: implicit declaration of function \u2018strlen\u2019 [-Wimplicit-function-declaration]\n  char* input_copy = malloc(strlen(input_str));\n                            ^\ncamelCaser.c:10:28: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\ncamelCaser.c:10:28: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncamelCaser.c:11:12: error: \u2018source\u2019 undeclared (first use in this function)\n  char* i = source;\n            ^\ncamelCaser.c:11:12: note: each undeclared identifier is reported only once for each function it appears in\ncamelCaser.c:21:6: error: conflicting types for \u2018j\u2019\n  int j = 0;\n      ^\ncamelCaser.c:12:10: note: previous definition of \u2018j\u2019 was here\n    char* j = source;\n          ^\ncamelCaser.c:23:18: error: \u2018size\u2019 undeclared (first use in this function)\n  for(int i=0; i< size; i++){\n                  ^\nmake: *** [camelCaser.o] Error 1\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "implementationLastElementNull", 
        "description": "Test that camelCaser returns an array that is null terminated"
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\ncamelCaser.c: In function \u2018camel_caser\u2019:\ncamelCaser.c:10:28: warning: implicit declaration of function \u2018strlen\u2019 [-Wimplicit-function-declaration]\n  char* input_copy = malloc(strlen(input_str));\n                            ^\ncamelCaser.c:10:28: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\ncamelCaser.c:10:28: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncamelCaser.c:11:12: error: \u2018source\u2019 undeclared (first use in this function)\n  char* i = source;\n            ^\ncamelCaser.c:11:12: note: each undeclared identifier is reported only once for each function it appears in\ncamelCaser.c:21:6: error: conflicting types for \u2018j\u2019\n  int j = 0;\n      ^\ncamelCaser.c:12:10: note: previous definition of \u2018j\u2019 was here\n    char* j = source;\n          ^\ncamelCaser.c:23:18: error: \u2018size\u2019 undeclared (first use in this function)\n  for(int i=0; i< size; i++){\n                  ^\nmake: *** [camelCaser.o] Error 1\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "implementationCorrectNumberSentences", 
        "description": "Test that camelCaser returns an array with the correct number of elements"
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\ncamelCaser.c: In function \u2018camel_caser\u2019:\ncamelCaser.c:10:28: warning: implicit declaration of function \u2018strlen\u2019 [-Wimplicit-function-declaration]\n  char* input_copy = malloc(strlen(input_str));\n                            ^\ncamelCaser.c:10:28: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\ncamelCaser.c:10:28: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncamelCaser.c:11:12: error: \u2018source\u2019 undeclared (first use in this function)\n  char* i = source;\n            ^\ncamelCaser.c:11:12: note: each undeclared identifier is reported only once for each function it appears in\ncamelCaser.c:21:6: error: conflicting types for \u2018j\u2019\n  int j = 0;\n      ^\ncamelCaser.c:12:10: note: previous definition of \u2018j\u2019 was here\n    char* j = source;\n          ^\ncamelCaser.c:23:18: error: \u2018size\u2019 undeclared (first use in this function)\n  for(int i=0; i< size; i++){\n                  ^\nmake: *** [camelCaser.o] Error 1\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "implementationCorrectNumberWords", 
        "description": "Test that camelCaser returns an array with elements that are the correct length"
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\ncamelCaser.c: In function \u2018camel_caser\u2019:\ncamelCaser.c:10:28: warning: implicit declaration of function \u2018strlen\u2019 [-Wimplicit-function-declaration]\n  char* input_copy = malloc(strlen(input_str));\n                            ^\ncamelCaser.c:10:28: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\ncamelCaser.c:10:28: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncamelCaser.c:11:12: error: \u2018source\u2019 undeclared (first use in this function)\n  char* i = source;\n            ^\ncamelCaser.c:11:12: note: each undeclared identifier is reported only once for each function it appears in\ncamelCaser.c:21:6: error: conflicting types for \u2018j\u2019\n  int j = 0;\n      ^\ncamelCaser.c:12:10: note: previous definition of \u2018j\u2019 was here\n    char* j = source;\n          ^\ncamelCaser.c:23:18: error: \u2018size\u2019 undeclared (first use in this function)\n  for(int i=0; i< size; i++){\n                  ^\nmake: *** [camelCaser.o] Error 1\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "implementationCorrectCapitals", 
        "description": "Test that camelCaser returns sentences with the correct capitalization"
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\ncamelCaser.c: In function \u2018camel_caser\u2019:\ncamelCaser.c:10:28: warning: implicit declaration of function \u2018strlen\u2019 [-Wimplicit-function-declaration]\n  char* input_copy = malloc(strlen(input_str));\n                            ^\ncamelCaser.c:10:28: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\ncamelCaser.c:10:28: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncamelCaser.c:11:12: error: \u2018source\u2019 undeclared (first use in this function)\n  char* i = source;\n            ^\ncamelCaser.c:11:12: note: each undeclared identifier is reported only once for each function it appears in\ncamelCaser.c:21:6: error: conflicting types for \u2018j\u2019\n  int j = 0;\n      ^\ncamelCaser.c:12:10: note: previous definition of \u2018j\u2019 was here\n    char* j = source;\n          ^\ncamelCaser.c:23:18: error: \u2018size\u2019 undeclared (first use in this function)\n  for(int i=0; i< size; i++){\n                  ^\nmake: *** [camelCaser.o] Error 1\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "implementationMultiplePunc", 
        "description": "Test that camelCaser returns a correct array with edge case punctuation and spaces"
      }, 
      {
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\ncamelCaser.c: In function \u2018camel_caser\u2019:\ncamelCaser.c:10:28: warning: implicit declaration of function \u2018strlen\u2019 [-Wimplicit-function-declaration]\n  char* input_copy = malloc(strlen(input_str));\n                            ^\ncamelCaser.c:10:28: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\ncamelCaser.c:10:28: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncamelCaser.c:11:12: error: \u2018source\u2019 undeclared (first use in this function)\n  char* i = source;\n            ^\ncamelCaser.c:11:12: note: each undeclared identifier is reported only once for each function it appears in\ncamelCaser.c:21:6: error: conflicting types for \u2018j\u2019\n  int j = 0;\n      ^\ncamelCaser.c:12:10: note: previous definition of \u2018j\u2019 was here\n    char* j = source;\n          ^\ncamelCaser.c:23:18: error: \u2018size\u2019 undeclared (first use in this function)\n  for(int i=0; i< size; i++){\n                  ^\nmake: *** [camelCaser.o] Error 1\n", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "implementationIncompleteSentences", 
        "description": "Test that camelCaser returns output where incomplete sentences are ignored"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "Function1", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test", 
        "ptsEarned": -1.0, 
        "ptsPossible": 1.0, 
        "name": "Function2", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test", 
        "ptsEarned": -1.0, 
        "ptsPossible": 1.0, 
        "name": "Function3", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "Function4", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test", 
        "ptsEarned": -1.0, 
        "ptsPossible": 1.0, 
        "name": "Function5", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test", 
        "ptsEarned": -1.0, 
        "ptsPossible": 1.0, 
        "name": "Function6", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "Function7", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "Function8", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test", 
        "ptsEarned": -1.0, 
        "ptsPossible": 1.0, 
        "name": "Function9", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test", 
        "ptsEarned": -1.0, 
        "ptsPossible": 1.0, 
        "name": "Function10", 
        "description": "Mysterious camelCaser implementation..."
      }
    ], 
    "checksum": "f5c8482f0c207f79f07d8924b5ae2d7c11714bc4  camelCaser.c\n40f7d386b1d89886991c5af3fd097354d80c32fd  camelCaser_tests.c", 
    "revision": "4400"
  }, 
  {
    "timestamp": "2016-09-04 12:00:00.806657", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test that camelCaser returns NULL when given NULL", 
        "name": "implementationNullTerminated", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\ncc_impl_main.c: In function \u2018test_correct_number_sentences\u2019:\ncc_impl_main.c:35:20: warning: implicit declaration of function \u2018strlen\u2019 [-Wimplicit-function-declaration]\n         success &= strlen(output[i]) == 10;\n                    ^\ncc_impl_main.c:35:20: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\ncc_impl_main.c:35:20: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncc_impl_main.c: In function \u2018test_correct_number_words\u2019:\ncc_impl_main.c:49:16: warning: implicit declaration of function \u2018strcmp\u2019 [-Wimplicit-function-declaration]\n     success &= strcmp(output[0], correct_output[0]);\n                ^\ncc_impl_main.c: In function \u2018test_multiple_punc_edge_case\u2019:\ncc_impl_main.c:78:16: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\n     success &= strlen(output[0]) == 10;\n                ^\ncc_impl_main.c:78:16: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncc_impl_main.c: In function \u2018test_incomplete_sentences\u2019:\ncc_impl_main.c:91:16: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\n     success &= strlen(output[0]) == 10;\n                ^\ncc_impl_main.c:91:16: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncamelCaser.c: In function \u2018camel_caser\u2019:\ncamelCaser.c:10:28: warning: implicit declaration of function \u2018strlen\u2019 [-Wimplicit-function-declaration]\n  char* input_copy = malloc(strlen(input_str));\n                            ^\ncamelCaser.c:10:28: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\ncamelCaser.c:10:28: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncamelCaser.c:11:12: error: \u2018source\u2019 undeclared (first use in this function)\n  char* i = source;\n            ^\ncamelCaser.c:11:12: note: each undeclared identifier is reported only once for each function it appears in\ncamelCaser.c:21:6: error: conflicting types for \u2018j\u2019\n  int j = 0;\n      ^\ncamelCaser.c:12:10: note: previous definition of \u2018j\u2019 was here\n    char* j = source;\n          ^\ncamelCaser.c:23:18: error: \u2018size\u2019 undeclared (first use in this function)\n  for(int i=0; i< size; i++){\n                  ^\nmake: *** [camelCaser.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test that camelCaser returns an array that is null terminated", 
        "name": "implementationLastElementNull", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\ncamelCaser.c: In function \u2018camel_caser\u2019:\ncamelCaser.c:10:28: warning: implicit declaration of function \u2018strlen\u2019 [-Wimplicit-function-declaration]\n  char* input_copy = malloc(strlen(input_str));\n                            ^\ncamelCaser.c:10:28: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\ncamelCaser.c:10:28: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncamelCaser.c:11:12: error: \u2018source\u2019 undeclared (first use in this function)\n  char* i = source;\n            ^\ncamelCaser.c:11:12: note: each undeclared identifier is reported only once for each function it appears in\ncamelCaser.c:21:6: error: conflicting types for \u2018j\u2019\n  int j = 0;\n      ^\ncamelCaser.c:12:10: note: previous definition of \u2018j\u2019 was here\n    char* j = source;\n          ^\ncamelCaser.c:23:18: error: \u2018size\u2019 undeclared (first use in this function)\n  for(int i=0; i< size; i++){\n                  ^\nmake: *** [camelCaser.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test that camelCaser returns an array with the correct number of elements", 
        "name": "implementationCorrectNumberSentences", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\ncamelCaser.c: In function \u2018camel_caser\u2019:\ncamelCaser.c:10:28: warning: implicit declaration of function \u2018strlen\u2019 [-Wimplicit-function-declaration]\n  char* input_copy = malloc(strlen(input_str));\n                            ^\ncamelCaser.c:10:28: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\ncamelCaser.c:10:28: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncamelCaser.c:11:12: error: \u2018source\u2019 undeclared (first use in this function)\n  char* i = source;\n            ^\ncamelCaser.c:11:12: note: each undeclared identifier is reported only once for each function it appears in\ncamelCaser.c:21:6: error: conflicting types for \u2018j\u2019\n  int j = 0;\n      ^\ncamelCaser.c:12:10: note: previous definition of \u2018j\u2019 was here\n    char* j = source;\n          ^\ncamelCaser.c:23:18: error: \u2018size\u2019 undeclared (first use in this function)\n  for(int i=0; i< size; i++){\n                  ^\nmake: *** [camelCaser.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test that camelCaser returns an array with elements that are the correct length", 
        "name": "implementationCorrectNumberWords", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\ncamelCaser.c: In function \u2018camel_caser\u2019:\ncamelCaser.c:10:28: warning: implicit declaration of function \u2018strlen\u2019 [-Wimplicit-function-declaration]\n  char* input_copy = malloc(strlen(input_str));\n                            ^\ncamelCaser.c:10:28: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\ncamelCaser.c:10:28: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncamelCaser.c:11:12: error: \u2018source\u2019 undeclared (first use in this function)\n  char* i = source;\n            ^\ncamelCaser.c:11:12: note: each undeclared identifier is reported only once for each function it appears in\ncamelCaser.c:21:6: error: conflicting types for \u2018j\u2019\n  int j = 0;\n      ^\ncamelCaser.c:12:10: note: previous definition of \u2018j\u2019 was here\n    char* j = source;\n          ^\ncamelCaser.c:23:18: error: \u2018size\u2019 undeclared (first use in this function)\n  for(int i=0; i< size; i++){\n                  ^\nmake: *** [camelCaser.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test that camelCaser returns sentences with the correct capitalization", 
        "name": "implementationCorrectCapitals", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\ncamelCaser.c: In function \u2018camel_caser\u2019:\ncamelCaser.c:10:28: warning: implicit declaration of function \u2018strlen\u2019 [-Wimplicit-function-declaration]\n  char* input_copy = malloc(strlen(input_str));\n                            ^\ncamelCaser.c:10:28: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\ncamelCaser.c:10:28: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncamelCaser.c:11:12: error: \u2018source\u2019 undeclared (first use in this function)\n  char* i = source;\n            ^\ncamelCaser.c:11:12: note: each undeclared identifier is reported only once for each function it appears in\ncamelCaser.c:21:6: error: conflicting types for \u2018j\u2019\n  int j = 0;\n      ^\ncamelCaser.c:12:10: note: previous definition of \u2018j\u2019 was here\n    char* j = source;\n          ^\ncamelCaser.c:23:18: error: \u2018size\u2019 undeclared (first use in this function)\n  for(int i=0; i< size; i++){\n                  ^\nmake: *** [camelCaser.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test that camelCaser returns a correct array with edge case punctuation and spaces", 
        "name": "implementationMultiplePunc", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\ncamelCaser.c: In function \u2018camel_caser\u2019:\ncamelCaser.c:10:28: warning: implicit declaration of function \u2018strlen\u2019 [-Wimplicit-function-declaration]\n  char* input_copy = malloc(strlen(input_str));\n                            ^\ncamelCaser.c:10:28: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\ncamelCaser.c:10:28: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncamelCaser.c:11:12: error: \u2018source\u2019 undeclared (first use in this function)\n  char* i = source;\n            ^\ncamelCaser.c:11:12: note: each undeclared identifier is reported only once for each function it appears in\ncamelCaser.c:21:6: error: conflicting types for \u2018j\u2019\n  int j = 0;\n      ^\ncamelCaser.c:12:10: note: previous definition of \u2018j\u2019 was here\n    char* j = source;\n          ^\ncamelCaser.c:23:18: error: \u2018size\u2019 undeclared (first use in this function)\n  for(int i=0; i< size; i++){\n                  ^\nmake: *** [camelCaser.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test that camelCaser returns output where incomplete sentences are ignored", 
        "name": "implementationIncompleteSentences", 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\ncamelCaser.c: In function \u2018camel_caser\u2019:\ncamelCaser.c:10:28: warning: implicit declaration of function \u2018strlen\u2019 [-Wimplicit-function-declaration]\n  char* input_copy = malloc(strlen(input_str));\n                            ^\ncamelCaser.c:10:28: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\ncamelCaser.c:10:28: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncamelCaser.c:11:12: error: \u2018source\u2019 undeclared (first use in this function)\n  char* i = source;\n            ^\ncamelCaser.c:11:12: note: each undeclared identifier is reported only once for each function it appears in\ncamelCaser.c:21:6: error: conflicting types for \u2018j\u2019\n  int j = 0;\n      ^\ncamelCaser.c:12:10: note: previous definition of \u2018j\u2019 was here\n    char* j = source;\n          ^\ncamelCaser.c:23:18: error: \u2018size\u2019 undeclared (first use in this function)\n  for(int i=0; i< size; i++){\n                  ^\nmake: *** [camelCaser.o] Error 1\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Mysterious camelCaser implementation...", 
        "name": "Function1", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": -1.0, 
        "description": "Mysterious camelCaser implementation...", 
        "name": "Function2", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": -1.0, 
        "description": "Mysterious camelCaser implementation...", 
        "name": "Function3", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Mysterious camelCaser implementation...", 
        "name": "Function4", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": -1.0, 
        "description": "Mysterious camelCaser implementation...", 
        "name": "Function5", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": -1.0, 
        "description": "Mysterious camelCaser implementation...", 
        "name": "Function6", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Mysterious camelCaser implementation...", 
        "name": "Function7", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Mysterious camelCaser implementation...", 
        "name": "Function8", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": -1.0, 
        "description": "Mysterious camelCaser implementation...", 
        "name": "Function9", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": -1.0, 
        "description": "Mysterious camelCaser implementation...", 
        "name": "Function10", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test"
      }
    ], 
    "revision": "5079", 
    "checksum": "f5c8482f0c207f79f07d8924b5ae2d7c11714bc4  camelCaser.c\n40f7d386b1d89886991c5af3fd097354d80c32fd  camelCaser_tests.c"
  }, 
  {
    "timestamp": "2016-09-05 12:00:00.778602", 
    "testcases": [
      {
        "description": "Test that camelCaser returns NULL when given NULL", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\ncamelCaser.c: In function \u2018camel_caser\u2019:\ncamelCaser.c:10:28: warning: implicit declaration of function \u2018strlen\u2019 [-Wimplicit-function-declaration]\n  char* input_copy = malloc(strlen(input_str));\n                            ^\ncamelCaser.c:10:28: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\ncamelCaser.c:10:28: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncamelCaser.c:11:12: error: \u2018source\u2019 undeclared (first use in this function)\n  char* i = source;\n            ^\ncamelCaser.c:11:12: note: each undeclared identifier is reported only once for each function it appears in\ncamelCaser.c:21:6: error: conflicting types for \u2018j\u2019\n  int j = 0;\n      ^\ncamelCaser.c:12:10: note: previous definition of \u2018j\u2019 was here\n    char* j = source;\n          ^\ncamelCaser.c:23:18: error: \u2018size\u2019 undeclared (first use in this function)\n  for(int i=0; i< size; i++){\n                  ^\nmake: *** [camelCaser.o] Error 1\n", 
        "name": "implementationNullTerminated", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that camelCaser returns an array that is null terminated", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\ncamelCaser.c: In function \u2018camel_caser\u2019:\ncamelCaser.c:10:28: warning: implicit declaration of function \u2018strlen\u2019 [-Wimplicit-function-declaration]\n  char* input_copy = malloc(strlen(input_str));\n                            ^\ncamelCaser.c:10:28: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\ncamelCaser.c:10:28: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncamelCaser.c:11:12: error: \u2018source\u2019 undeclared (first use in this function)\n  char* i = source;\n            ^\ncamelCaser.c:11:12: note: each undeclared identifier is reported only once for each function it appears in\ncamelCaser.c:21:6: error: conflicting types for \u2018j\u2019\n  int j = 0;\n      ^\ncamelCaser.c:12:10: note: previous definition of \u2018j\u2019 was here\n    char* j = source;\n          ^\ncamelCaser.c:23:18: error: \u2018size\u2019 undeclared (first use in this function)\n  for(int i=0; i< size; i++){\n                  ^\nmake: *** [camelCaser.o] Error 1\n", 
        "name": "implementationLastElementNull", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that camelCaser returns an array with the correct number of elements", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\ncamelCaser.c: In function \u2018camel_caser\u2019:\ncamelCaser.c:10:28: warning: implicit declaration of function \u2018strlen\u2019 [-Wimplicit-function-declaration]\n  char* input_copy = malloc(strlen(input_str));\n                            ^\ncamelCaser.c:10:28: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\ncamelCaser.c:10:28: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncamelCaser.c:11:12: error: \u2018source\u2019 undeclared (first use in this function)\n  char* i = source;\n            ^\ncamelCaser.c:11:12: note: each undeclared identifier is reported only once for each function it appears in\ncamelCaser.c:21:6: error: conflicting types for \u2018j\u2019\n  int j = 0;\n      ^\ncamelCaser.c:12:10: note: previous definition of \u2018j\u2019 was here\n    char* j = source;\n          ^\ncamelCaser.c:23:18: error: \u2018size\u2019 undeclared (first use in this function)\n  for(int i=0; i< size; i++){\n                  ^\nmake: *** [camelCaser.o] Error 1\n", 
        "name": "implementationCorrectNumberSentences", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that camelCaser returns an array with elements that are the correct length", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\ncamelCaser.c: In function \u2018camel_caser\u2019:\ncamelCaser.c:10:28: warning: implicit declaration of function \u2018strlen\u2019 [-Wimplicit-function-declaration]\n  char* input_copy = malloc(strlen(input_str));\n                            ^\ncamelCaser.c:10:28: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\ncamelCaser.c:10:28: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncamelCaser.c:11:12: error: \u2018source\u2019 undeclared (first use in this function)\n  char* i = source;\n            ^\ncamelCaser.c:11:12: note: each undeclared identifier is reported only once for each function it appears in\ncamelCaser.c:21:6: error: conflicting types for \u2018j\u2019\n  int j = 0;\n      ^\ncamelCaser.c:12:10: note: previous definition of \u2018j\u2019 was here\n    char* j = source;\n          ^\ncamelCaser.c:23:18: error: \u2018size\u2019 undeclared (first use in this function)\n  for(int i=0; i< size; i++){\n                  ^\nmake: *** [camelCaser.o] Error 1\n", 
        "name": "implementationCorrectNumberWords", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that camelCaser returns sentences with the correct capitalization", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\ncamelCaser.c: In function \u2018camel_caser\u2019:\ncamelCaser.c:10:28: warning: implicit declaration of function \u2018strlen\u2019 [-Wimplicit-function-declaration]\n  char* input_copy = malloc(strlen(input_str));\n                            ^\ncamelCaser.c:10:28: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\ncamelCaser.c:10:28: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncamelCaser.c:11:12: error: \u2018source\u2019 undeclared (first use in this function)\n  char* i = source;\n            ^\ncamelCaser.c:11:12: note: each undeclared identifier is reported only once for each function it appears in\ncamelCaser.c:21:6: error: conflicting types for \u2018j\u2019\n  int j = 0;\n      ^\ncamelCaser.c:12:10: note: previous definition of \u2018j\u2019 was here\n    char* j = source;\n          ^\ncamelCaser.c:23:18: error: \u2018size\u2019 undeclared (first use in this function)\n  for(int i=0; i< size; i++){\n                  ^\nmake: *** [camelCaser.o] Error 1\n", 
        "name": "implementationCorrectCapitals", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that camelCaser returns a correct array with edge case punctuation and spaces", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\ncamelCaser.c: In function \u2018camel_caser\u2019:\ncamelCaser.c:10:28: warning: implicit declaration of function \u2018strlen\u2019 [-Wimplicit-function-declaration]\n  char* input_copy = malloc(strlen(input_str));\n                            ^\ncamelCaser.c:10:28: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\ncamelCaser.c:10:28: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncamelCaser.c:11:12: error: \u2018source\u2019 undeclared (first use in this function)\n  char* i = source;\n            ^\ncamelCaser.c:11:12: note: each undeclared identifier is reported only once for each function it appears in\ncamelCaser.c:21:6: error: conflicting types for \u2018j\u2019\n  int j = 0;\n      ^\ncamelCaser.c:12:10: note: previous definition of \u2018j\u2019 was here\n    char* j = source;\n          ^\ncamelCaser.c:23:18: error: \u2018size\u2019 undeclared (first use in this function)\n  for(int i=0; i< size; i++){\n                  ^\nmake: *** [camelCaser.o] Error 1\n", 
        "name": "implementationMultiplePunc", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that camelCaser returns output where incomplete sentences are ignored", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nFAILED TO COMPILE!\ncamelCaser.c: In function \u2018camel_caser\u2019:\ncamelCaser.c:10:28: warning: implicit declaration of function \u2018strlen\u2019 [-Wimplicit-function-declaration]\n  char* input_copy = malloc(strlen(input_str));\n                            ^\ncamelCaser.c:10:28: warning: incompatible implicit declaration of built-in function \u2018strlen\u2019\ncamelCaser.c:10:28: note: include \u2018<string.h>\u2019 or provide a declaration of \u2018strlen\u2019\ncamelCaser.c:11:12: error: \u2018source\u2019 undeclared (first use in this function)\n  char* i = source;\n            ^\ncamelCaser.c:11:12: note: each undeclared identifier is reported only once for each function it appears in\ncamelCaser.c:21:6: error: conflicting types for \u2018j\u2019\n  int j = 0;\n      ^\ncamelCaser.c:12:10: note: previous definition of \u2018j\u2019 was here\n    char* j = source;\n          ^\ncamelCaser.c:23:18: error: \u2018size\u2019 undeclared (first use in this function)\n  for(int i=0; i< size; i++){\n                  ^\nmake: *** [camelCaser.o] Error 1\n", 
        "name": "implementationIncompleteSentences", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Mysterious camelCaser implementation...", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "Function1", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Mysterious camelCaser implementation...", 
        "ptsEarned": -1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test", 
        "name": "Function2", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Mysterious camelCaser implementation...", 
        "ptsEarned": -1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test", 
        "name": "Function3", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Mysterious camelCaser implementation...", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "Function4", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Mysterious camelCaser implementation...", 
        "ptsEarned": -1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test", 
        "name": "Function5", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Mysterious camelCaser implementation...", 
        "ptsEarned": -1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test", 
        "name": "Function6", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Mysterious camelCaser implementation...", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "Function7", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Mysterious camelCaser implementation...", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "Function8", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Mysterious camelCaser implementation...", 
        "ptsEarned": -1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test", 
        "name": "Function9", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Mysterious camelCaser implementation...", 
        "ptsEarned": -1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test", 
        "name": "Function10", 
        "ptsPossible": 1.0
      }
    ], 
    "checksum": "f5c8482f0c207f79f07d8924b5ae2d7c11714bc4  camelCaser.c\n40f7d386b1d89886991c5af3fd097354d80c32fd  camelCaser_tests.c", 
    "revision": "6394"
  }, 
  {
    "timestamp": "2016-09-06 12:00:00.771462", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "implementationNullTerminated", 
        "description": "Test that camelCaser returns NULL when given NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "implementationLastElementNull", 
        "description": "Test that camelCaser returns an array that is null terminated"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "implementationCorrectNumberSentences", 
        "description": "Test that camelCaser returns an array with the correct number of elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "implementationCorrectNumberWords", 
        "description": "Test that camelCaser returns an array with elements that are the correct length"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "implementationCorrectCapitals", 
        "description": "Test that camelCaser returns sentences with the correct capitalization"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "implementationMultiplePunc", 
        "description": "Test that camelCaser returns a correct array with edge case punctuation and spaces"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "implementationIncompleteSentences", 
        "description": "Test that camelCaser returns output where incomplete sentences are ignored"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "Function1", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test", 
        "ptsEarned": -1.0, 
        "ptsPossible": 1.0, 
        "name": "Function2", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "Function3", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "Function4", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test", 
        "ptsEarned": -1.0, 
        "ptsPossible": 1.0, 
        "name": "Function5", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test", 
        "ptsEarned": -1.0, 
        "ptsPossible": 1.0, 
        "name": "Function6", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "Function7", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "Function8", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test", 
        "ptsEarned": -1.0, 
        "ptsPossible": 1.0, 
        "name": "Function9", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test", 
        "ptsEarned": -1.0, 
        "ptsPossible": 1.0, 
        "name": "Function10", 
        "description": "Mysterious camelCaser implementation..."
      }
    ], 
    "revision": "8217", 
    "checksum": "1f0796b3bbf0fbdf12d83e3b983fa46e3b6a4f95  camelCaser.c\n55d3f0af967b3fb473e32d9d28aa6a8e68370281  camelCaser_tests.c"
  }, 
  {
    "timestamp": "2016-09-07 12:00:00.773773", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test that camelCaser returns NULL when given NULL", 
        "name": "implementationNullTerminated", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test that camelCaser returns an array that is null terminated", 
        "name": "implementationLastElementNull", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test that camelCaser returns an array with the correct number of elements", 
        "name": "implementationCorrectNumberSentences", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test that camelCaser returns an array with elements that are the correct length", 
        "name": "implementationCorrectNumberWords", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test that camelCaser returns sentences with the correct capitalization", 
        "name": "implementationCorrectCapitals", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test that camelCaser returns a correct array with edge case punctuation and spaces", 
        "name": "implementationMultiplePunc", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test that camelCaser returns output where incomplete sentences are ignored", 
        "name": "implementationIncompleteSentences", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": -1.0, 
        "description": "Mysterious camelCaser implementation...", 
        "name": "Function1", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Mysterious camelCaser implementation...", 
        "name": "Function2", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Mysterious camelCaser implementation...", 
        "name": "Function3", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": -1.0, 
        "description": "Mysterious camelCaser implementation...", 
        "name": "Function4", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Mysterious camelCaser implementation...", 
        "name": "Function5", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Mysterious camelCaser implementation...", 
        "name": "Function6", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": -1.0, 
        "description": "Mysterious camelCaser implementation...", 
        "name": "Function7", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": -1.0, 
        "description": "Mysterious camelCaser implementation...", 
        "name": "Function8", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Mysterious camelCaser implementation...", 
        "name": "Function9", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Mysterious camelCaser implementation...", 
        "name": "Function10", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }
    ], 
    "checksum": "862598d400c69b4b733b7c8a74f145093dfb0514  camelCaser.c\nf4956d381816249fe8af6929fb883540ec6e1bb0  camelCaser_tests.c", 
    "revision": "9674"
  }, 
  {
    "timestamp": "2016-09-08 00:00:00.806185", 
    "testcases": [
      {
        "description": "Test that camelCaser returns NULL when given NULL", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "implementationNullTerminated", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that camelCaser returns an array that is null terminated", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "implementationLastElementNull", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that camelCaser returns an array with the correct number of elements", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "implementationCorrectNumberSentences", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that camelCaser returns an array with elements that are the correct length", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "implementationCorrectNumberWords", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that camelCaser returns sentences with the correct capitalization", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "implementationCorrectCapitals", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that camelCaser returns a correct array with edge case punctuation and spaces", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "implementationMultiplePunc", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that camelCaser returns output where incomplete sentences are ignored", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "implementationIncompleteSentences", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Mysterious camelCaser implementation...", 
        "ptsEarned": -1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test", 
        "name": "Function1", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Mysterious camelCaser implementation...", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "Function2", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Mysterious camelCaser implementation...", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "Function3", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Mysterious camelCaser implementation...", 
        "ptsEarned": -1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test", 
        "name": "Function4", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Mysterious camelCaser implementation...", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "Function5", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Mysterious camelCaser implementation...", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "Function6", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Mysterious camelCaser implementation...", 
        "ptsEarned": -1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test", 
        "name": "Function7", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Mysterious camelCaser implementation...", 
        "ptsEarned": -1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test", 
        "name": "Function8", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Mysterious camelCaser implementation...", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "Function9", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Mysterious camelCaser implementation...", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "Function10", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "11254", 
    "checksum": "862598d400c69b4b733b7c8a74f145093dfb0514  camelCaser.c\n4dac7b92472aaa307096db78b92c92ac8f2e16ca  camelCaser_tests.c"
  }, 
  {
    "timestamp": "2016-12-09 22:27:36.942124", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "implementationNullTerminated", 
        "description": "Test that camelCaser returns NULL when given NULL"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "implementationLastElementNull", 
        "description": "Test that camelCaser returns an array that is null terminated"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "implementationCorrectNumberSentences", 
        "description": "Test that camelCaser returns an array with the correct number of elements"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "implementationCorrectNumberWords", 
        "description": "Test that camelCaser returns an array with elements that are the correct length"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "implementationCorrectCapitals", 
        "description": "Test that camelCaser returns sentences with the correct capitalization"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "implementationMultiplePunc", 
        "description": "Test that camelCaser returns a correct array with edge case punctuation and spaces"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "implementationIncompleteSentences", 
        "description": "Test that camelCaser returns output where incomplete sentences are ignored"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed test", 
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "name": "implementationASCII", 
        "description": "Test that camelCaser correctly handles various ASCII characters"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "Function1", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "Function2", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "Function3", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "Function4", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "Function5", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "Function6", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "Function7", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "Function8", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "Function9", 
        "description": "Mysterious camelCaser implementation..."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "Function10", 
        "description": "Mysterious camelCaser implementation..."
      }
    ], 
    "checksum": "862598d400c69b4b733b7c8a74f145093dfb0514  camelCaser.c\n0e1819351c223b60aa3943f70304b7e1e727711c  camelCaser_tests.c", 
    "revision": "87381"
  }
]