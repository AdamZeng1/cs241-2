[
  {
    "timestamp": "2016-09-30 10:38:00.621014", 
    "testcases": [
      {
        "description": "Test queue, queue size doesn't exceed max capacity", 
        "ptsEarned": 0.0, 
        "log": "Queue failed to block!", 
        "name": "test_queue_block_on_min", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test queue, queue size doesn't exceed max capacity", 
        "ptsEarned": 0.0, 
        "log": "Queue failed to block!", 
        "name": "test_queue_maxSize", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test queue, push and pull large amounts of data", 
        "ptsEarned": 0.0, 
        "log": "", 
        "name": "test_queue_generic_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Queue stress test", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nsum: 0\n\nsum: 0\n\nsum: 0\n\nYour code passed 0 out of 3 runs", 
        "name": "test_queue_stress", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Queue stress test", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==32462== Memcheck, a memory error detector\n==32462== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==32462== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==32462== Command: ./queue_tests 5\n==32462== \n==32462== \n==32462== HEAP SUMMARY:\n==32462==     in use at exit: 0 bytes in 0 blocks\n==32462==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated\n==32462== \n==32462== All heap blocks were freed -- no leaks are possible\n==32462== \n==32462== For counts of detected and suppressed errors, rerun with: -v\n==32462== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "name": "test_queue_mem", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that queue is not bounded", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_queue_unboundedness", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test semamore in rendezvous.c", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_semamore", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test semamore init function", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_semamore_init", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test semamore wait", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_semamore_wait_simple", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that semamore wait blocks", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_semamore_wait_block", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test semamore post", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_semamore_post_simple", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that semamore post blocks", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_semamore_post_block", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test on use of barrier.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\n\nPassed 0/3 trials.", 
        "name": "test_barrier_single", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test for multiple uses of the barrier.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\n\nPassed 0/3 trials.", 
        "name": "test_barrier_multiple", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test for multiple uses of the barrier under valgrind.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==32594== Memcheck, a memory error detector\n==32594== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==32594== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==32594== Command: ./barrier_tests 2 4\n==32594== \n==32594== \n==32594== HEAP SUMMARY:\n==32594==     in use at exit: 0 bytes in 0 blocks\n==32594==   total heap usage: 5 allocs, 5 frees, 5,184 bytes allocated\n==32594== \n==32594== All heap blocks were freed -- no leaks are possible\n==32594== \n==32594== For counts of detected and suppressed errors, rerun with: -v\n==32594== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n\nFailed the test. Output was incorrect.\n\nPassed 0/1 trials.", 
        "name": "test_barrier_mem", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "37262", 
    "checksum": "9e9c63c83ef6b56e2f9fac99025cb44279015334  queue.c\nc2063fa5eff5aefcbb684cba928acb0c9b65c5ff  semamore.c\na6262f03eea81f1eb1aa59e85996c1254e8b4ea3  barrier.c"
  }, 
  {
    "timestamp": "2016-09-30 22:00:00.731724", 
    "testcases": [
      {
        "log": "Queue failed to block!", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_queue_block_on_min", 
        "description": "Test queue, queue size doesn't exceed max capacity"
      }, 
      {
        "log": "Queue failed to block!", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_queue_maxSize", 
        "description": "Test queue, queue size doesn't exceed max capacity"
      }, 
      {
        "log": "", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_queue_generic_test", 
        "description": "Test queue, push and pull large amounts of data"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nsum: 0\n\nsum: 0\n\nsum: 0\n\nYour code passed 0 out of 3 runs", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_queue_stress", 
        "description": "Queue stress test"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==19180== Memcheck, a memory error detector\n==19180== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==19180== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==19180== Command: ./queue_tests 5\n==19180== \n==19180== \n==19180== HEAP SUMMARY:\n==19180==     in use at exit: 0 bytes in 0 blocks\n==19180==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated\n==19180== \n==19180== All heap blocks were freed -- no leaks are possible\n==19180== \n==19180== For counts of detected and suppressed errors, rerun with: -v\n==19180== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_queue_mem", 
        "description": "Queue stress test"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_queue_unboundedness", 
        "description": "Test that queue is not bounded"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_semamore", 
        "description": "Test semamore in rendezvous.c"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_semamore_init", 
        "description": "Test semamore init function"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_semamore_wait_simple", 
        "description": "Test semamore wait"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_semamore_wait_block", 
        "description": "Test that semamore wait blocks"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_semamore_post_simple", 
        "description": "Test semamore post"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_semamore_post_block", 
        "description": "Test that semamore post blocks"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\n\nPassed 0/3 trials.", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_barrier_single", 
        "description": "Test on use of barrier."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\n\nPassed 0/3 trials.", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_barrier_multiple", 
        "description": "Test for multiple uses of the barrier."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==19312== Memcheck, a memory error detector\n==19312== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==19312== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==19312== Command: ./barrier_tests 2 4\n==19312== \n==19312== \n==19312== HEAP SUMMARY:\n==19312==     in use at exit: 0 bytes in 0 blocks\n==19312==   total heap usage: 5 allocs, 5 frees, 5,184 bytes allocated\n==19312== \n==19312== All heap blocks were freed -- no leaks are possible\n==19312== \n==19312== For counts of detected and suppressed errors, rerun with: -v\n==19312== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n\nFailed the test. Output was incorrect.\n\nPassed 0/1 trials.", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_barrier_mem", 
        "description": "Test for multiple uses of the barrier under valgrind."
      }
    ], 
    "checksum": "9e9c63c83ef6b56e2f9fac99025cb44279015334  queue.c\nc2063fa5eff5aefcbb684cba928acb0c9b65c5ff  semamore.c\na6262f03eea81f1eb1aa59e85996c1254e8b4ea3  barrier.c", 
    "revision": "37589"
  }, 
  {
    "timestamp": "2016-10-01 22:00:00.698447", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test queue, queue size doesn't exceed max capacity", 
        "name": "test_queue_block_on_min", 
        "log": "Queue failed to block!"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test queue, queue size doesn't exceed max capacity", 
        "name": "test_queue_maxSize", 
        "log": "Queue failed to block!"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test queue, push and pull large amounts of data", 
        "name": "test_queue_generic_test", 
        "log": ""
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Queue stress test", 
        "name": "test_queue_stress", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nsum: 0\n\nsum: 0\n\nsum: 0\n\nYour code passed 0 out of 3 runs"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Queue stress test", 
        "name": "test_queue_mem", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==6067== Memcheck, a memory error detector\n==6067== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==6067== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==6067== Command: ./queue_tests 5\n==6067== \n==6067== \n==6067== HEAP SUMMARY:\n==6067==     in use at exit: 0 bytes in 0 blocks\n==6067==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated\n==6067== \n==6067== All heap blocks were freed -- no leaks are possible\n==6067== \n==6067== For counts of detected and suppressed errors, rerun with: -v\n==6067== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test that queue is not bounded", 
        "name": "test_queue_unboundedness", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test semamore in rendezvous.c", 
        "name": "test_semamore", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test semamore init function", 
        "name": "test_semamore_init", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test semamore wait", 
        "name": "test_semamore_wait_simple", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test that semamore wait blocks", 
        "name": "test_semamore_wait_block", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test semamore post", 
        "name": "test_semamore_post_simple", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test that semamore post blocks", 
        "name": "test_semamore_post_block", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test on use of barrier.", 
        "name": "test_barrier_single", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\n\nPassed 0/3 trials."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test for multiple uses of the barrier.", 
        "name": "test_barrier_multiple", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\n\nPassed 0/3 trials."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test for multiple uses of the barrier under valgrind.", 
        "name": "test_barrier_mem", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==6199== Memcheck, a memory error detector\n==6199== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==6199== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==6199== Command: ./barrier_tests 2 4\n==6199== \n==6199== \n==6199== HEAP SUMMARY:\n==6199==     in use at exit: 0 bytes in 0 blocks\n==6199==   total heap usage: 5 allocs, 5 frees, 5,184 bytes allocated\n==6199== \n==6199== All heap blocks were freed -- no leaks are possible\n==6199== \n==6199== For counts of detected and suppressed errors, rerun with: -v\n==6199== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n\nFailed the test. Output was incorrect.\n\nPassed 0/1 trials."
      }
    ], 
    "revision": "38391", 
    "checksum": "9e9c63c83ef6b56e2f9fac99025cb44279015334  queue.c\nc2063fa5eff5aefcbb684cba928acb0c9b65c5ff  semamore.c\na6262f03eea81f1eb1aa59e85996c1254e8b4ea3  barrier.c"
  }, 
  {
    "timestamp": "2016-10-02 22:00:00.748311", 
    "testcases": [
      {
        "description": "Test queue, queue size doesn't exceed max capacity", 
        "ptsEarned": 0.0, 
        "log": "Queue failed to block!", 
        "name": "test_queue_block_on_min", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test queue, queue size doesn't exceed max capacity", 
        "ptsEarned": 0.0, 
        "log": "Queue failed to block!", 
        "name": "test_queue_maxSize", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test queue, push and pull large amounts of data", 
        "ptsEarned": 0.0, 
        "log": "", 
        "name": "test_queue_generic_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Queue stress test", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nsum: 0\n\nsum: 0\n\nsum: 0\n\nYour code passed 0 out of 3 runs", 
        "name": "test_queue_stress", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Queue stress test", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==25236== Memcheck, a memory error detector\n==25236== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==25236== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==25236== Command: ./queue_tests 5\n==25236== \n==25236== \n==25236== HEAP SUMMARY:\n==25236==     in use at exit: 0 bytes in 0 blocks\n==25236==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated\n==25236== \n==25236== All heap blocks were freed -- no leaks are possible\n==25236== \n==25236== For counts of detected and suppressed errors, rerun with: -v\n==25236== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "name": "test_queue_mem", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that queue is not bounded", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_queue_unboundedness", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test semamore in rendezvous.c", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_semamore", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test semamore init function", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_semamore_init", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test semamore wait", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_semamore_wait_simple", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that semamore wait blocks", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_semamore_wait_block", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test semamore post", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_semamore_post_simple", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that semamore post blocks", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_semamore_post_block", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test on use of barrier.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\n\nPassed 0/3 trials.", 
        "name": "test_barrier_single", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test for multiple uses of the barrier.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\n\nPassed 0/3 trials.", 
        "name": "test_barrier_multiple", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test for multiple uses of the barrier under valgrind.", 
        "ptsEarned": 0.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==25368== Memcheck, a memory error detector\n==25368== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==25368== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==25368== Command: ./barrier_tests 2 4\n==25368== \n==25368== \n==25368== HEAP SUMMARY:\n==25368==     in use at exit: 0 bytes in 0 blocks\n==25368==   total heap usage: 5 allocs, 5 frees, 5,184 bytes allocated\n==25368== \n==25368== All heap blocks were freed -- no leaks are possible\n==25368== \n==25368== For counts of detected and suppressed errors, rerun with: -v\n==25368== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n\nFailed the test. Output was incorrect.\n\nPassed 0/1 trials.", 
        "name": "test_barrier_mem", 
        "ptsPossible": 1.0
      }
    ], 
    "checksum": "9e9c63c83ef6b56e2f9fac99025cb44279015334  queue.c\nc2063fa5eff5aefcbb684cba928acb0c9b65c5ff  semamore.c\na6262f03eea81f1eb1aa59e85996c1254e8b4ea3  barrier.c", 
    "revision": "39221"
  }, 
  {
    "timestamp": "2016-10-03 22:00:00.712509", 
    "testcases": [
      {
        "log": "Queue failed to block!", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_queue_block_on_min", 
        "description": "Test queue, queue size doesn't exceed max capacity"
      }, 
      {
        "log": "Queue failed to block!", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_queue_maxSize", 
        "description": "Test queue, queue size doesn't exceed max capacity"
      }, 
      {
        "log": "", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_queue_generic_test", 
        "description": "Test queue, push and pull large amounts of data"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nsum: 0\n\nsum: 0\n\nsum: 0\n\nYour code passed 0 out of 3 runs", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_queue_stress", 
        "description": "Queue stress test"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==11803== Memcheck, a memory error detector\n==11803== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==11803== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==11803== Command: ./queue_tests 5\n==11803== \n==11803== \n==11803== HEAP SUMMARY:\n==11803==     in use at exit: 0 bytes in 0 blocks\n==11803==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated\n==11803== \n==11803== All heap blocks were freed -- no leaks are possible\n==11803== \n==11803== For counts of detected and suppressed errors, rerun with: -v\n==11803== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_queue_mem", 
        "description": "Queue stress test"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_queue_unboundedness", 
        "description": "Test that queue is not bounded"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_semamore", 
        "description": "Test semamore in rendezvous.c"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_semamore_init", 
        "description": "Test semamore init function"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_semamore_wait_simple", 
        "description": "Test semamore wait"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_semamore_wait_block", 
        "description": "Test that semamore wait blocks"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_semamore_post_simple", 
        "description": "Test semamore post"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsEarned": 1.0, 
        "ptsPossible": 1.0, 
        "name": "test_semamore_post_block", 
        "description": "Test that semamore post blocks"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\n\nPassed 0/3 trials.", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_barrier_single", 
        "description": "Test on use of barrier."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\nFailed the test. Output was incorrect.\n\nPassed 0/3 trials.", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_barrier_multiple", 
        "description": "Test for multiple uses of the barrier."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==11935== Memcheck, a memory error detector\n==11935== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==11935== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==11935== Command: ./barrier_tests 2 4\n==11935== \n==11935== \n==11935== HEAP SUMMARY:\n==11935==     in use at exit: 0 bytes in 0 blocks\n==11935==   total heap usage: 5 allocs, 5 frees, 5,184 bytes allocated\n==11935== \n==11935== All heap blocks were freed -- no leaks are possible\n==11935== \n==11935== For counts of detected and suppressed errors, rerun with: -v\n==11935== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n\nFailed the test. Output was incorrect.\n\nPassed 0/1 trials.", 
        "ptsEarned": 0.0, 
        "ptsPossible": 1.0, 
        "name": "test_barrier_mem", 
        "description": "Test for multiple uses of the barrier under valgrind."
      }
    ], 
    "revision": "41222", 
    "checksum": "9e9c63c83ef6b56e2f9fac99025cb44279015334  queue.c\nc2063fa5eff5aefcbb684cba928acb0c9b65c5ff  semamore.c\na6262f03eea81f1eb1aa59e85996c1254e8b4ea3  barrier.c"
  }, 
  {
    "timestamp": "2016-10-04 22:00:00.722538", 
    "testcases": [
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test queue, queue size doesn't exceed max capacity", 
        "name": "test_queue_block_on_min", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test queue, queue size doesn't exceed max capacity", 
        "name": "test_queue_maxSize", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test queue, push and pull large amounts of data", 
        "name": "test_queue_generic_test", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Queue stress test", 
        "name": "test_queue_stress", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Queue stress test", 
        "name": "test_queue_mem", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==31061== Memcheck, a memory error detector\n==31061== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==31061== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==31061== Command: ./queue_tests 5\n==31061== \n==31061== \n==31061== HEAP SUMMARY:\n==31061==     in use at exit: 0 bytes in 0 blocks\n==31061==   total heap usage: 11 allocs, 11 frees, 272 bytes allocated\n==31061== \n==31061== All heap blocks were freed -- no leaks are possible\n==31061== \n==31061== For counts of detected and suppressed errors, rerun with: -v\n==31061== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n"
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test that queue is not bounded", 
        "name": "test_queue_unboundedness", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test semamore in rendezvous.c", 
        "name": "test_semamore", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test semamore init function", 
        "name": "test_semamore_init", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test semamore wait", 
        "name": "test_semamore_wait_simple", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test that semamore wait blocks", 
        "name": "test_semamore_wait_block", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test semamore post", 
        "name": "test_semamore_post_simple", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test that semamore post blocks", 
        "name": "test_semamore_post_block", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test on use of barrier.", 
        "name": "test_barrier_single", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "description": "Test for multiple uses of the barrier.", 
        "name": "test_barrier_multiple", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code.."
      }, 
      {
        "ptsPossible": 1.0, 
        "ptsEarned": 0.0, 
        "description": "Test for multiple uses of the barrier under valgrind.", 
        "name": "test_barrier_mem", 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==31193== Memcheck, a memory error detector\n==31193== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==31193== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==31193== Command: ./barrier_tests 2 4\n==31193== \n==31193== \n==31193== Process terminating with default action of signal 11 (SIGSEGV)\n==31193==  General Protection Fault\n==31193==    at 0x5054963: __lll_unlock_elision (elision-unlock.c:33)\n==31193==    by 0x504F317: pthread_cond_wait@@GLIBC_2.3.2 (pthread_cond_wait.S:94)\n==31193==    by 0x401010: barrier_wait (barrier.c:30)\n==31193==    by 0x400ABA: thread_func_throwaway (barrier_tests.c:125)\n==31193==    by 0x50496F9: start_thread (pthread_create.c:333)\n==31193== \n==31193== HEAP SUMMARY:\n==31193==     in use at exit: 1,088 bytes in 4 blocks\n==31193==   total heap usage: 4 allocs, 0 frees, 1,088 bytes allocated\n==31193== \n==31193== 1,088 bytes in 4 blocks are possibly lost in loss record 1 of 1\n==31193==    at 0x4C2FB55: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==31193==    by 0x40136D4: allocate_dtv (dl-tls.c:322)\n==31193==    by 0x40136D4: _dl_allocate_tls (dl-tls.c:539)\n==31193==    by 0x504A2AE: allocate_stack (allocatestack.c:588)\n==31193==    by 0x504A2AE: pthread_create@@GLIBC_2.2.5 (pthread_create.c:539)\n==31193==    by 0x400E11: multiple_barrier_test (barrier_tests.c:204)\n==31193==    by 0x527F82F: (below main) (libc-start.c:291)\n==31193== \n==31193== LEAK SUMMARY:\n==31193==    definitely lost: 0 bytes in 0 blocks\n==31193==    indirectly lost: 0 bytes in 0 blocks\n==31193==      possibly lost: 1,088 bytes in 4 blocks\n==31193==    still reachable: 0 bytes in 0 blocks\n==31193==         suppressed: 0 bytes in 0 blocks\n==31193== \n==31193== For counts of detected and suppressed errors, rerun with: -v\n==31193== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)\n\nFailed the test. Output was incorrect.\n\nPassed 0/1 trials."
      }
    ], 
    "checksum": "ccfb4d40645e235e3f42a32a4037f979b8b8249a  queue.c\nc2063fa5eff5aefcbb684cba928acb0c9b65c5ff  semamore.c\n9eab0d8b4fe5baec25a95058ca890766e0e5219b  barrier.c", 
    "revision": "42594"
  }, 
  {
    "timestamp": "2016-10-05 12:00:00.687175", 
    "testcases": [
      {
        "description": "Test queue, queue size doesn't exceed max capacity", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_queue_block_on_min", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test queue, queue size doesn't exceed max capacity", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_queue_maxSize", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test queue, push and pull large amounts of data", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_queue_generic_test", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Queue stress test", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_queue_stress", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Queue stress test", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==17635== Memcheck, a memory error detector\n==17635== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==17635== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==17635== Command: ./queue_tests 5\n==17635== \n==17635== \n==17635== HEAP SUMMARY:\n==17635==     in use at exit: 0 bytes in 0 blocks\n==17635==   total heap usage: 11 allocs, 11 frees, 272 bytes allocated\n==17635== \n==17635== All heap blocks were freed -- no leaks are possible\n==17635== \n==17635== For counts of detected and suppressed errors, rerun with: -v\n==17635== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "name": "test_queue_mem", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that queue is not bounded", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_queue_unboundedness", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test semamore in rendezvous.c", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_semamore", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test semamore init function", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_semamore_init", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test semamore wait", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_semamore_wait_simple", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that semamore wait blocks", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_semamore_wait_block", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test semamore post", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_semamore_post_simple", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test that semamore post blocks", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_semamore_post_block", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test on use of barrier.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_barrier_single", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test for multiple uses of the barrier.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "name": "test_barrier_multiple", 
        "ptsPossible": 1.0
      }, 
      {
        "description": "Test for multiple uses of the barrier under valgrind.", 
        "ptsEarned": 1.0, 
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==17768== Memcheck, a memory error detector\n==17768== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==17768== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==17768== Command: ./barrier_tests 2 4\n==17768== \n==17768== \n==17768== HEAP SUMMARY:\n==17768==     in use at exit: 0 bytes in 0 blocks\n==17768==   total heap usage: 5 allocs, 5 frees, 5,184 bytes allocated\n==17768== \n==17768== All heap blocks were freed -- no leaks are possible\n==17768== \n==17768== For counts of detected and suppressed errors, rerun with: -v\n==17768== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "name": "test_barrier_mem", 
        "ptsPossible": 1.0
      }
    ], 
    "revision": "43065", 
    "checksum": "ccfb4d40645e235e3f42a32a4037f979b8b8249a  queue.c\nc2063fa5eff5aefcbb684cba928acb0c9b65c5ff  semamore.c\n95645c19b1b85d5979502e35e8da78ee74893b8f  barrier.c"
  }, 
  {
    "timestamp": "2016-10-06 00:00:00.682464", 
    "testcases": [
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_queue_block_on_min", 
        "description": "Test queue, queue size doesn't exceed max capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_queue_maxSize", 
        "description": "Test queue, queue size doesn't exceed max capacity"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_queue_generic_test", 
        "description": "Test queue, push and pull large amounts of data"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_queue_stress", 
        "description": "Queue stress test"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==3672== Memcheck, a memory error detector\n==3672== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==3672== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==3672== Command: ./queue_tests 5\n==3672== \n==3672== \n==3672== HEAP SUMMARY:\n==3672==     in use at exit: 0 bytes in 0 blocks\n==3672==   total heap usage: 11 allocs, 11 frees, 272 bytes allocated\n==3672== \n==3672== All heap blocks were freed -- no leaks are possible\n==3672== \n==3672== For counts of detected and suppressed errors, rerun with: -v\n==3672== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_queue_mem", 
        "description": "Queue stress test"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_queue_unboundedness", 
        "description": "Test that queue is not bounded"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_semamore", 
        "description": "Test semamore in rendezvous.c"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_semamore_init", 
        "description": "Test semamore init function"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_semamore_wait_simple", 
        "description": "Test semamore wait"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_semamore_wait_block", 
        "description": "Test that semamore wait blocks"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_semamore_post_simple", 
        "description": "Test semamore post"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_semamore_post_block", 
        "description": "Test that semamore post blocks"
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_barrier_single", 
        "description": "Test on use of barrier."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_barrier_multiple", 
        "description": "Test for multiple uses of the barrier."
      }, 
      {
        "log": "Trying to compile your code...\nSuccessfully compiled your code..\n==3804== Memcheck, a memory error detector\n==3804== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.\n==3804== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info\n==3804== Command: ./barrier_tests 2 4\n==3804== \n==3804== \n==3804== HEAP SUMMARY:\n==3804==     in use at exit: 0 bytes in 0 blocks\n==3804==   total heap usage: 5 allocs, 5 frees, 5,184 bytes allocated\n==3804== \n==3804== All heap blocks were freed -- no leaks are possible\n==3804== \n==3804== For counts of detected and suppressed errors, rerun with: -v\n==3804== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)\n", 
        "ptsPossible": 1.0, 
        "ptsEarned": 1.0, 
        "name": "test_barrier_mem", 
        "description": "Test for multiple uses of the barrier under valgrind."
      }
    ], 
    "checksum": "ccfb4d40645e235e3f42a32a4037f979b8b8249a  queue.c\nc2063fa5eff5aefcbb684cba928acb0c9b65c5ff  semamore.c\n95645c19b1b85d5979502e35e8da78ee74893b8f  barrier.c", 
    "revision": "44380"
  }
]